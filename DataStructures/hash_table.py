"""
Here I am adding only one value against any given key. More can be added if value is made a list.

Keys can also be generated based on values, and then those values can be added against those keys.
The key can be generated by various algorithms, we can even create our own!
"""
import sys

class dictionary:
    def __init__(self):
        self.store={}

    #checks if key exists in dictionary
    def keyExist(self,key):
        if key in self.store:
            return True
        return False

"""
Pseudo code for key generation from integral value given by user:
>Key = (Value * 31) 
>Key = Key % 17 until outcome is single digit and non-zero. If zero, Key=(Key+ Random(1,9)) % 17
>Append the given Value in the list, against the key generated in above step

Here, we are keeping all key values from 1-9 and against each key, the value is a list having multiple items
So we are allowing one key-multiple values
This is a very basic and random way of generating key and hence serves as Hash-Table
"""

    def addPair(self,key,value):
        self.store[key]=value
        self.display()

    def removeByKey(self,key):
        del self.store[key]

    def removeByValue(self,value):
        for k,v in self.store.items():
            if v==value:
                del self.store[k]
                print("Deleted!")
                return
        print("Value does not exist")

    def clear(self):
        if self.store:
            self.store.clear()
            print("All values cleared!")
        else:
            print("No values present")
    
    def display(self):
        if (self.store):
            print("Dictionary is -")

            #iterating through all key:value pair in dictionary
            for k,v in self.store.items():
                print(k," : ",v,"\n")
        else:
            print("Dictionary is empty!")

def main():
    dic=dictionary()
    while(True):
        print("1. Add a key-value pair")
        print("2. Remove by key")
        print("3. Remove by value")
        print("4. Clear dictionary")
        print("5. Display dictionary")
        print("6. Exit")
        user_choice=input("Enter your Choice!\n")
        user_choice=int(user_choice)
        if user_choice == 1:
            key=input("Enter key")
            if dic.keyExist(key):
                print("Key already exists, please try another key!")
                continue
            value=input("Enter value")
            dic.addPair(key,value)

        elif user_choice == 2:
            key=input("Enter key to remove : ")
            if not(dic.keyExist(key)):
                print("Key does not exist!")
                continue
            dic.removeByKey(key)
        elif user_choice == 3:
            value=input("Enter value to remove : ")
            dic.removeByValue(value)
        elif user_choice == 4:
            dic.clear()
        elif user_choice == 5:
            dic.display()
        elif user_choice == 6:
            sys.exit(0)
        else:
            print("Please enter a valid choice!")

if __name__=='__main__':
    main()
